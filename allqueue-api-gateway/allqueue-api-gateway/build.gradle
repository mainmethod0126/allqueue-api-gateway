plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version "0.9.4"
}

group = 'io.github.mainmethod0126'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
        }
    }
    // generateProtoTasks {
    //     all()*.plugins {
    //         grpc { option '@generated=omit' }
    //     }
    // }
	generateProtoTasks {
        all().configureEach { task ->
			task.plugins {
				grpc { option '@generated=omit' }
			}
			task.generateDescriptorSet = true
			task.descriptorSetOptions.path = "${projectDir}/proto/descriptors/${task.sourceSet.name}.dsc"
        }
    }
}


sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
			srcDir 'build/generated/source/proto/main/java'
			srcDir 'build/generated/source/proto/main/grpc'
        }
    }
}

tasks.named('processResources') {
    dependsOn 'generateProto'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


compileJava.dependsOn generateProto

dependencies {

	// https://mvnrepository.com/artifact/io.grpc/grpc-all
	implementation 'io.grpc:grpc-all:1.64.0'


	// https://mvnrepository.com/artifact/io.grpc/grpc-netty
	implementation 'io.grpc:grpc-netty:1.64.0'


	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-protobuf:2.17.1'

	// https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
	implementation 'com.google.protobuf:protobuf-java:3.25.3'


	// https://mvnrepository.com/artifact/net.devh/grpc-server-spring-boot-starter
	implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'


	implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.1.1'


	// implementation 'org.springframework.boot:spring-boot-starter-security:3.2.2'


	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.2'
	

	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.2.2'


	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
